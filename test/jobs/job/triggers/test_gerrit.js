var should = require('should');
var Gerrit = require('../../../../lib/jobs/job/triggers/gerrit.js');
var testlib = require('../../../testlib.js');
var Project = require('../../../../lib/jobs/job/triggers/gerrit/project.js');
var SkipVote = require('../../../../lib/jobs/job/triggers/gerrit/skip-vote.js');
var TriggerOn = require('../../../../lib/jobs/job/triggers/gerrit/trigger-on.js');

describe('Gerrit', function() {
  describe('constructor', testlib.describeProxyConstructor(Gerrit));
  describe('object', testlib.describeProxyUppableAndable(Gerrit));
  describe('properties', testlib.describeProxyCustomArrayProperty(Gerrit, 'trigger-on', TriggerOn));
  describe('properties', testlib.describeProxyPrimitiveProperty(Gerrit, 'override-votes'));
  describe('properties', testlib.describeProxyPrimitiveProperty(Gerrit, 'gerrit-build-started-verified-value'));
  describe('properties', testlib.describeProxyPrimitiveProperty(Gerrit, 'gerrit-build-successful-verified-value'));
  describe('properties', testlib.describeProxyPrimitiveProperty(Gerrit, 'gerrit-build-failed-verified-value'));
  describe('properties', testlib.describeProxyPrimitiveProperty(Gerrit, 'gerrit-build-unstable-verified-value'));
  describe('properties', testlib.describeProxyPrimitiveProperty(Gerrit, 'gerrit-build-notbuilt-verified-value'));
  describe('properties', testlib.describeProxyPrimitiveProperty(Gerrit, 'gerrit-build-started-codereview-value'));
  describe('properties', testlib.describeProxyPrimitiveProperty(Gerrit, 'gerrit-build-successful-codereview-value'));
  describe('properties', testlib.describeProxyPrimitiveProperty(Gerrit, 'gerrit-build-failed-codereview-value'));
  describe('properties', testlib.describeProxyPrimitiveProperty(Gerrit, 'gerrit-build-unstable-codereview-value'));
  describe('properties', testlib.describeProxyPrimitiveProperty(Gerrit, 'gerrit-build-notbuilt-codereview-value'));
  describe('properties', testlib.describeProxyPrimitiveProperty(Gerrit, 'failure-message'));
  describe('properties', testlib.describeProxyPrimitiveProperty(Gerrit, 'successful-message'));
  describe('properties', testlib.describeProxyPrimitiveProperty(Gerrit, 'unstable-message'));
  describe('properties', testlib.describeProxyPrimitiveProperty(Gerrit, 'notbuilt-message'));
  describe('properties', testlib.describeProxyPrimitiveProperty(Gerrit, 'failure-message-file'));
  describe('properties', testlib.describeProxyObjectArrayProperty(Gerrit, 'projects', Project));
  describe('properties', testlib.describeProxyObjectProperty(Gerrit, 'skip-vote', SkipVote));
  describe('properties', testlib.describeProxyPrimitiveProperty(Gerrit, 'silent'));
  describe('properties', testlib.describeProxyPrimitiveProperty(Gerrit, 'silent-start'));
  describe('properties', testlib.describeProxyPrimitiveProperty(Gerrit, 'escape-quotes'));
  describe('properties', testlib.describeProxyPrimitiveProperty(Gerrit, 'no-name-and-email'));
  describe('properties', testlib.describeProxyPrimitiveProperty(Gerrit, 'readable-message'));
  describe('properties', testlib.describeProxyPrimitiveProperty(Gerrit, 'dependency-jobs'));
  describe('properties', testlib.describeProxyPrimitiveProperty(Gerrit, 'notification-level'));
  describe('properties', testlib.describeProxyPrimitiveProperty(Gerrit, 'dynamic-trigger-enabled'));
  describe('properties', testlib.describeProxyPrimitiveProperty(Gerrit, 'dynamic-trigger-url'));
  describe('properties', testlib.describeProxyPrimitiveProperty(Gerrit, 'trigger-for-unreviewed-patches'));
  describe('properties', testlib.describeProxyPrimitiveProperty(Gerrit, 'custom-url'));
  describe('properties', testlib.describeProxyPrimitiveProperty(Gerrit, 'server-name'));
});
