var should = require('should');
var Git = require('../../../../lib/jobs/job/scm/git.js');
var testlib = require('../../../testlib.js');
var ChangelogAgainst = require('../../../../lib/jobs/job/scm/git/changelog-against.js');
var Remote = require('../../../../lib/jobs/job/scm/git/remote.js');
var Merge = require('../../../../lib/jobs/job/scm/git/merge.js');
var Submodule = require('../../../../lib/jobs/job/scm/git/submodule.js');
var Clean = require('../../../../lib/jobs/job/scm/git/clean.js');
var SparseCheckout = require('../../../../lib/jobs/job/scm/git/sparse-checkout.js');

describe('Git', function() {
  describe('constructor', testlib.describeProxyConstructor(Git));
  describe('object', testlib.describeProxyUppableAndable(Git));
  describe('properties', testlib.describeProxyPrimitiveProperty(Git, 'url'));
  describe('properties', testlib.describeProxyPrimitiveProperty(Git, 'credentials-id'));
  describe('properties', testlib.describeProxyPrimitiveProperty(Git, 'refspec'));
  describe('properties', testlib.describeProxyPrimitiveProperty(Git, 'name'));
  describe('properties', testlib.describeProxyObjectArrayProperty(Git, 'remotes', Remote));
  describe('properties', testlib.describeProxyPrimitiveArrayProperty(Git, 'branches'));
  describe('properties', testlib.describeProxyPrimitiveArrayProperty(Git, 'excluded-users'));
  describe('properties', testlib.describeProxyPrimitiveArrayProperty(Git, 'included-regions'));
  describe('properties', testlib.describeProxyPrimitiveArrayProperty(Git, 'excluded-regions'));
  describe('properties', testlib.describeProxyPrimitiveProperty(Git, 'local-branch'));
  describe('properties', testlib.describeProxyObjectProperty(Git, 'merge', Merge));
  describe('properties', testlib.describeProxyPrimitiveProperty(Git, 'basedir'));
  describe('properties', testlib.describeProxyPrimitiveProperty(Git, 'skip-tag'));
  describe('properties', testlib.describeProxyPrimitiveProperty(Git, 'shallow-clone'));
  describe('properties', testlib.describeProxyPrimitiveProperty(Git, 'prune'));
  describe('properties', testlib.describeProxyPrimitiveProperty(Git, 'fastpoll'));
  describe('properties', testlib.describeProxyPrimitiveProperty(Git, 'use-author'));
  describe('properties', testlib.describeProxyPrimitiveProperty(Git, 'git-tool'));
  describe('properties', testlib.describeProxyPrimitiveProperty(Git, 'reference-repo'));
  describe('properties', testlib.describeProxyPrimitiveProperty(Git, 'scm-name'));
  describe('properties', testlib.describeProxyPrimitiveProperty(Git, 'ignore-notify'));
  describe('properties', testlib.describeProxyPrimitiveProperty(Git, 'browser'));
  describe('properties', testlib.describeProxyPrimitiveProperty(Git, 'browser-url'));
  describe('properties', testlib.describeProxyPrimitiveProperty(Git, 'browser-version'));
  describe('properties', testlib.describeProxyPrimitiveProperty(Git, 'project-name'));
  describe('properties', testlib.describeProxyPrimitiveProperty(Git, 'choosing-strategy'));
  describe('properties', testlib.describeProxyPrimitiveProperty(Git, 'git-config-name'));
  describe('properties', testlib.describeProxyPrimitiveProperty(Git, 'git-config-email'));
  describe('properties', testlib.describeProxyObjectProperty(Git, 'changelog-against', ChangelogAgainst));
  describe('properties', testlib.describeProxyObjectProperty(Git, 'clean', Clean));
  describe('properties', testlib.describeProxyObjectProperty(Git, 'sparse-checkout', SparseCheckout));
  describe('properties', testlib.describeProxyPrimitiveArrayProperty(Git, 'ignore-commits-with-messages'));
  describe('properties', testlib.describeProxyPrimitiveProperty(Git, 'force-polling-using-workspace'));
  describe('properties', testlib.describeProxyObjectProperty(Git, 'submodule', Submodule));
  describe('properties', testlib.describeProxyPrimitiveProperty(Git, 'timeout'));
  describe('properties', testlib.describeProxyPrimitiveProperty(Git, 'wipe-workspace'));
});
